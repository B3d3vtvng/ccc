#ifndef UNICODE_H
#define UNICODE_H

#include <stdint.h>
#include <stdbool.h>

typedef struct {
    uint32_t start;
    uint32_t end;
} codepoint_range_t;

static const codepoint_range_t identifier_start_ranges[] = {
    {0x41, 0x5A},
    {0x61, 0x7A},
    {0xAA, 0xAA},
    {0xB5, 0xB5},
    {0xBA, 0xBA},
    {0xC0, 0xD6},
    {0xD8, 0xF6},
    {0xF8, 0x21F},
    {0x222, 0x233},
    {0x250, 0x2AD},
    {0x2B0, 0x2B8},
    {0x2BB, 0x2C1},
    {0x2D0, 0x2D1},
    {0x2E0, 0x2E4},
    {0x2EE, 0x2EE},
    {0x37A, 0x37A},
    {0x386, 0x386},
    {0x388, 0x38A},
    {0x38C, 0x38C},
    {0x38E, 0x3A1},
    {0x3A3, 0x3CE},
    {0x3D0, 0x3D7},
    {0x3DA, 0x3F3},
    {0x400, 0x481},
    {0x48C, 0x4C4},
    {0x4C7, 0x4C8},
    {0x4CB, 0x4CC},
    {0x4D0, 0x4F5},
    {0x4F8, 0x4F9},
    {0x531, 0x556},
    {0x559, 0x559},
    {0x561, 0x587},
    {0x5D0, 0x5EA},
    {0x5F0, 0x5F2},
    {0x621, 0x63A},
    {0x640, 0x64A},
    {0x671, 0x6D3},
    {0x6D5, 0x6D5},
    {0x6E5, 0x6E6},
    {0x6FA, 0x6FC},
    {0x710, 0x710},
    {0x712, 0x72C},
    {0x780, 0x7A5},
    {0x905, 0x939},
    {0x93D, 0x93D},
    {0x950, 0x950},
    {0x958, 0x961},
    {0x985, 0x98C},
    {0x98F, 0x990},
    {0x993, 0x9A8},
    {0x9AA, 0x9B0},
    {0x9B2, 0x9B2},
    {0x9B6, 0x9B9},
    {0x9DC, 0x9DD},
    {0x9DF, 0x9E1},
    {0x9F0, 0x9F1},
    {0xA05, 0xA0A},
    {0xA0F, 0xA10},
    {0xA13, 0xA28},
    {0xA2A, 0xA30},
    {0xA32, 0xA33},
    {0xA35, 0xA36},
    {0xA38, 0xA39},
    {0xA59, 0xA5C},
    {0xA5E, 0xA5E},
    {0xA72, 0xA74},
    {0xA85, 0xA8B},
    {0xA8D, 0xA8D},
    {0xA8F, 0xA91},
    {0xA93, 0xAA8},
    {0xAAA, 0xAB0},
    {0xAB2, 0xAB3},
    {0xAB5, 0xAB9},
    {0xABD, 0xABD},
    {0xAD0, 0xAD0},
    {0xAE0, 0xAE0},
    {0xB05, 0xB0C},
    {0xB0F, 0xB10},
    {0xB13, 0xB28},
    {0xB2A, 0xB30},
    {0xB32, 0xB33},
    {0xB36, 0xB39},
    {0xB3D, 0xB3D},
    {0xB5C, 0xB5D},
    {0xB5F, 0xB61},
    {0xB85, 0xB8A},
    {0xB8E, 0xB90},
    {0xB92, 0xB95},
    {0xB99, 0xB9A},
    {0xB9C, 0xB9C},
    {0xB9E, 0xB9F},
    {0xBA3, 0xBA4},
    {0xBA8, 0xBAA},
    {0xBAE, 0xBB5},
    {0xBB7, 0xBB9},
    {0xC05, 0xC0C},
    {0xC0E, 0xC10},
    {0xC12, 0xC28},
    {0xC2A, 0xC33},
    {0xC35, 0xC39},
    {0xC60, 0xC61},
    {0xC85, 0xC8C},
    {0xC8E, 0xC90},
    {0xC92, 0xCA8},
    {0xCAA, 0xCB3},
    {0xCB5, 0xCB9},
    {0xCDE, 0xCDE},
    {0xCE0, 0xCE1},
    {0xD05, 0xD0C},
    {0xD0E, 0xD10},
    {0xD12, 0xD28},
    {0xD2A, 0xD39},
    {0xD60, 0xD61},
    {0xD85, 0xD96},
    {0xD9A, 0xDB1},
    {0xDB3, 0xDBB},
    {0xDBD, 0xDBD},
    {0xDC0, 0xDC6},
    {0xE01, 0xE30},
    {0xE32, 0xE33},
    {0xE40, 0xE46},
    {0xE81, 0xE82},
    {0xE84, 0xE84},
    {0xE87, 0xE88},
    {0xE8A, 0xE8A},
    {0xE8D, 0xE8D},
    {0xE94, 0xE97},
    {0xE99, 0xE9F},
    {0xEA1, 0xEA3},
    {0xEA5, 0xEA5},
    {0xEA7, 0xEA7},
    {0xEAA, 0xEAB},
    {0xEAD, 0xEB0},
    {0xEB2, 0xEB3},
    {0xEBD, 0xEBD},
    {0xEC0, 0xEC4},
    {0xEC6, 0xEC6},
    {0xEDC, 0xEDD},
    {0xF00, 0xF00},
    {0xF40, 0xF47},
    {0xF49, 0xF6A},
    {0xF88, 0xF8B},
    {0x1000, 0x1021},
    {0x1023, 0x1027},
    {0x1029, 0x102A},
    {0x1050, 0x1055},
    {0x10A0, 0x10C5},
    {0x10D0, 0x10F6},
    {0x1100, 0x1159},
    {0x115F, 0x11A2},
    {0x11A8, 0x11F9},
    {0x1200, 0x1206},
    {0x1208, 0x1246},
    {0x1248, 0x1248},
    {0x124A, 0x124D},
    {0x1250, 0x1256},
    {0x1258, 0x1258},
    {0x125A, 0x125D},
    {0x1260, 0x1286},
    {0x1288, 0x1288},
    {0x128A, 0x128D},
    {0x1290, 0x12AE},
    {0x12B0, 0x12B0},
    {0x12B2, 0x12B5},
    {0x12B8, 0x12BE},
    {0x12C0, 0x12C0},
    {0x12C2, 0x12C5},
    {0x12C8, 0x12CE},
    {0x12D0, 0x12D6},
    {0x12D8, 0x12EE},
    {0x12F0, 0x130E},
    {0x1310, 0x1310},
    {0x1312, 0x1315},
    {0x1318, 0x131E},
    {0x1320, 0x1346},
    {0x1348, 0x135A},
    {0x13A0, 0x13F4},
    {0x1401, 0x166C},
    {0x166F, 0x1676},
    {0x1681, 0x169A},
    {0x16A0, 0x16EA},
    {0x1780, 0x17B3},
    {0x1820, 0x1877},
    {0x1880, 0x18A8},
    {0x1E00, 0x1E9B},
    {0x1EA0, 0x1EF9},
    {0x1F00, 0x1F15},
    {0x1F18, 0x1F1D},
    {0x1F20, 0x1F45},
    {0x1F48, 0x1F4D},
    {0x1F50, 0x1F57},
    {0x1F59, 0x1F59},
    {0x1F5B, 0x1F5B},
    {0x1F5D, 0x1F5D},
    {0x1F5F, 0x1F7D},
    {0x1F80, 0x1FB4},
    {0x1FB6, 0x1FBC},
    {0x1FBE, 0x1FBE},
    {0x1FC2, 0x1FC4},
    {0x1FC6, 0x1FCC},
    {0x1FD0, 0x1FD3},
    {0x1FD6, 0x1FDB},
    {0x1FE0, 0x1FEC},
    {0x1FF2, 0x1FF4},
    {0x1FF6, 0x1FFC},
    {0x207F, 0x207F},
    {0x2102, 0x2102},
    {0x2107, 0x2107},
    {0x210A, 0x2113},
    {0x2115, 0x2115},
    {0x2119, 0x211D},
    {0x2124, 0x2124},
    {0x2126, 0x2126},
    {0x2128, 0x2128},
    {0x212A, 0x212D},
    {0x212F, 0x2131},
    {0x2133, 0x2139},
    {0x2160, 0x2183},
    {0x3005, 0x3007},
    {0x3021, 0x3029},
    {0x3031, 0x3035},
    {0x3038, 0x303A},
    {0x3041, 0x3094},
    {0x309D, 0x309E},
    {0x30A1, 0x30FA},
    {0x30FC, 0x30FE},
    {0x3105, 0x312C},
    {0x3131, 0x318E},
    {0x31A0, 0x31B7},
    {0x3400, 0x3400},
    {0x4DB5, 0x4DB5},
    {0x4E00, 0x4E00},
    {0x9FA5, 0x9FA5},
    {0xA000, 0xA48C},
    {0xAC00, 0xAC00},
    {0xD7A3, 0xD7A3},
    {0xF900, 0xFA2D},
    {0xFB00, 0xFB06},
    {0xFB13, 0xFB17},
    {0xFB1D, 0xFB1D},
    {0xFB1F, 0xFB28},
    {0xFB2A, 0xFB36},
    {0xFB38, 0xFB3C},
    {0xFB3E, 0xFB3E},
    {0xFB40, 0xFB41},
    {0xFB43, 0xFB44},
    {0xFB46, 0xFBB1},
    {0xFBD3, 0xFD3D},
    {0xFD50, 0xFD8F},
    {0xFD92, 0xFDC7},
    {0xFDF0, 0xFDFB},
    {0xFE70, 0xFE72},
    {0xFE74, 0xFE74},
    {0xFE76, 0xFEFC},
    {0xFF21, 0xFF3A},
    {0xFF41, 0xFF5A},
    {0xFF66, 0xFFBE},
    {0xFFC2, 0xFFC7},
    {0xFFCA, 0xFFCF},
    {0xFFD2, 0xFFD7},
    {0xFFDA, 0xFFDC},
    {0x0, 0x0}
};

static const codepoint_range_t identifier_continue_ranges[] = {
    {0x30, 0x39},
    {0x41, 0x5A},
    {0x5F, 0x5F},
    {0x61, 0x7A},
    {0xAA, 0xAA},
    {0xB5, 0xB5},
    {0xBA, 0xBA},
    {0xC0, 0xD6},
    {0xD8, 0xF6},
    {0xF8, 0x21F},
    {0x222, 0x233},
    {0x250, 0x2AD},
    {0x2B0, 0x2B8},
    {0x2BB, 0x2C1},
    {0x2D0, 0x2D1},
    {0x2E0, 0x2E4},
    {0x2EE, 0x2EE},
    {0x300, 0x34E},
    {0x360, 0x362},
    {0x37A, 0x37A},
    {0x386, 0x386},
    {0x388, 0x38A},
    {0x38C, 0x38C},
    {0x38E, 0x3A1},
    {0x3A3, 0x3CE},
    {0x3D0, 0x3D7},
    {0x3DA, 0x3F3},
    {0x400, 0x481},
    {0x483, 0x486},
    {0x48C, 0x4C4},
    {0x4C7, 0x4C8},
    {0x4CB, 0x4CC},
    {0x4D0, 0x4F5},
    {0x4F8, 0x4F9},
    {0x531, 0x556},
    {0x559, 0x559},
    {0x561, 0x587},
    {0x591, 0x5A1},
    {0x5A3, 0x5B9},
    {0x5BB, 0x5BD},
    {0x5BF, 0x5BF},
    {0x5C1, 0x5C2},
    {0x5C4, 0x5C4},
    {0x5D0, 0x5EA},
    {0x5F0, 0x5F2},
    {0x621, 0x63A},
    {0x640, 0x655},
    {0x660, 0x669},
    {0x670, 0x6D3},
    {0x6D5, 0x6DC},
    {0x6DF, 0x6E8},
    {0x6EA, 0x6ED},
    {0x6F0, 0x6FC},
    {0x710, 0x72C},
    {0x730, 0x74A},
    {0x780, 0x7B0},
    {0x901, 0x903},
    {0x905, 0x939},
    {0x93C, 0x94D},
    {0x950, 0x954},
    {0x958, 0x963},
    {0x966, 0x96F},
    {0x981, 0x983},
    {0x985, 0x98C},
    {0x98F, 0x990},
    {0x993, 0x9A8},
    {0x9AA, 0x9B0},
    {0x9B2, 0x9B2},
    {0x9B6, 0x9B9},
    {0x9BC, 0x9BC},
    {0x9BE, 0x9C4},
    {0x9C7, 0x9C8},
    {0x9CB, 0x9CD},
    {0x9D7, 0x9D7},
    {0x9DC, 0x9DD},
    {0x9DF, 0x9E3},
    {0x9E6, 0x9F1},
    {0xA02, 0xA02},
    {0xA05, 0xA0A},
    {0xA0F, 0xA10},
    {0xA13, 0xA28},
    {0xA2A, 0xA30},
    {0xA32, 0xA33},
    {0xA35, 0xA36},
    {0xA38, 0xA39},
    {0xA3C, 0xA3C},
    {0xA3E, 0xA42},
    {0xA47, 0xA48},
    {0xA4B, 0xA4D},
    {0xA59, 0xA5C},
    {0xA5E, 0xA5E},
    {0xA66, 0xA74},
    {0xA81, 0xA83},
    {0xA85, 0xA8B},
    {0xA8D, 0xA8D},
    {0xA8F, 0xA91},
    {0xA93, 0xAA8},
    {0xAAA, 0xAB0},
    {0xAB2, 0xAB3},
    {0xAB5, 0xAB9},
    {0xABC, 0xAC5},
    {0xAC7, 0xAC9},
    {0xACB, 0xACD},
    {0xAD0, 0xAD0},
    {0xAE0, 0xAE0},
    {0xAE6, 0xAEF},
    {0xB01, 0xB03},
    {0xB05, 0xB0C},
    {0xB0F, 0xB10},
    {0xB13, 0xB28},
    {0xB2A, 0xB30},
    {0xB32, 0xB33},
    {0xB36, 0xB39},
    {0xB3C, 0xB43},
    {0xB47, 0xB48},
    {0xB4B, 0xB4D},
    {0xB56, 0xB57},
    {0xB5C, 0xB5D},
    {0xB5F, 0xB61},
    {0xB66, 0xB6F},
    {0xB82, 0xB83},
    {0xB85, 0xB8A},
    {0xB8E, 0xB90},
    {0xB92, 0xB95},
    {0xB99, 0xB9A},
    {0xB9C, 0xB9C},
    {0xB9E, 0xB9F},
    {0xBA3, 0xBA4},
    {0xBA8, 0xBAA},
    {0xBAE, 0xBB5},
    {0xBB7, 0xBB9},
    {0xBBE, 0xBC2},
    {0xBC6, 0xBC8},
    {0xBCA, 0xBCD},
    {0xBD7, 0xBD7},
    {0xBE7, 0xBEF},
    {0xC01, 0xC03},
    {0xC05, 0xC0C},
    {0xC0E, 0xC10},
    {0xC12, 0xC28},
    {0xC2A, 0xC33},
    {0xC35, 0xC39},
    {0xC3E, 0xC44},
    {0xC46, 0xC48},
    {0xC4A, 0xC4D},
    {0xC55, 0xC56},
    {0xC60, 0xC61},
    {0xC66, 0xC6F},
    {0xC82, 0xC83},
    {0xC85, 0xC8C},
    {0xC8E, 0xC90},
    {0xC92, 0xCA8},
    {0xCAA, 0xCB3},
    {0xCB5, 0xCB9},
    {0xCBE, 0xCC4},
    {0xCC6, 0xCC8},
    {0xCCA, 0xCCD},
    {0xCD5, 0xCD6},
    {0xCDE, 0xCDE},
    {0xCE0, 0xCE1},
    {0xCE6, 0xCEF},
    {0xD02, 0xD03},
    {0xD05, 0xD0C},
    {0xD0E, 0xD10},
    {0xD12, 0xD28},
    {0xD2A, 0xD39},
    {0xD3E, 0xD43},
    {0xD46, 0xD48},
    {0xD4A, 0xD4D},
    {0xD57, 0xD57},
    {0xD60, 0xD61},
    {0xD66, 0xD6F},
    {0xD82, 0xD83},
    {0xD85, 0xD96},
    {0xD9A, 0xDB1},
    {0xDB3, 0xDBB},
    {0xDBD, 0xDBD},
    {0xDC0, 0xDC6},
    {0xDCA, 0xDCA},
    {0xDCF, 0xDD4},
    {0xDD6, 0xDD6},
    {0xDD8, 0xDDF},
    {0xDF2, 0xDF3},
    {0xE01, 0xE3A},
    {0xE40, 0xE4E},
    {0xE50, 0xE59},
    {0xE81, 0xE82},
    {0xE84, 0xE84},
    {0xE87, 0xE88},
    {0xE8A, 0xE8A},
    {0xE8D, 0xE8D},
    {0xE94, 0xE97},
    {0xE99, 0xE9F},
    {0xEA1, 0xEA3},
    {0xEA5, 0xEA5},
    {0xEA7, 0xEA7},
    {0xEAA, 0xEAB},
    {0xEAD, 0xEB9},
    {0xEBB, 0xEBD},
    {0xEC0, 0xEC4},
    {0xEC6, 0xEC6},
    {0xEC8, 0xECD},
    {0xED0, 0xED9},
    {0xEDC, 0xEDD},
    {0xF00, 0xF00},
    {0xF18, 0xF19},
    {0xF20, 0xF29},
    {0xF35, 0xF35},
    {0xF37, 0xF37},
    {0xF39, 0xF39},
    {0xF3E, 0xF47},
    {0xF49, 0xF6A},
    {0xF71, 0xF84},
    {0xF86, 0xF8B},
    {0xF90, 0xF97},
    {0xF99, 0xFBC},
    {0xFC6, 0xFC6},
    {0x1000, 0x1021},
    {0x1023, 0x1027},
    {0x1029, 0x102A},
    {0x102C, 0x1032},
    {0x1036, 0x1039},
    {0x1040, 0x1049},
    {0x1050, 0x1059},
    {0x10A0, 0x10C5},
    {0x10D0, 0x10F6},
    {0x1100, 0x1159},
    {0x115F, 0x11A2},
    {0x11A8, 0x11F9},
    {0x1200, 0x1206},
    {0x1208, 0x1246},
    {0x1248, 0x1248},
    {0x124A, 0x124D},
    {0x1250, 0x1256},
    {0x1258, 0x1258},
    {0x125A, 0x125D},
    {0x1260, 0x1286},
    {0x1288, 0x1288},
    {0x128A, 0x128D},
    {0x1290, 0x12AE},
    {0x12B0, 0x12B0},
    {0x12B2, 0x12B5},
    {0x12B8, 0x12BE},
    {0x12C0, 0x12C0},
    {0x12C2, 0x12C5},
    {0x12C8, 0x12CE},
    {0x12D0, 0x12D6},
    {0x12D8, 0x12EE},
    {0x12F0, 0x130E},
    {0x1310, 0x1310},
    {0x1312, 0x1315},
    {0x1318, 0x131E},
    {0x1320, 0x1346},
    {0x1348, 0x135A},
    {0x1369, 0x1371},
    {0x13A0, 0x13F4},
    {0x1401, 0x166C},
    {0x166F, 0x1676},
    {0x1681, 0x169A},
    {0x16A0, 0x16EA},
    {0x1780, 0x17D3},
    {0x17E0, 0x17E9},
    {0x1810, 0x1819},
    {0x1820, 0x1877},
    {0x1880, 0x18A9},
    {0x1E00, 0x1E9B},
    {0x1EA0, 0x1EF9},
    {0x1F00, 0x1F15},
    {0x1F18, 0x1F1D},
    {0x1F20, 0x1F45},
    {0x1F48, 0x1F4D},
    {0x1F50, 0x1F57},
    {0x1F59, 0x1F59},
    {0x1F5B, 0x1F5B},
    {0x1F5D, 0x1F5D},
    {0x1F5F, 0x1F7D},
    {0x1F80, 0x1FB4},
    {0x1FB6, 0x1FBC},
    {0x1FBE, 0x1FBE},
    {0x1FC2, 0x1FC4},
    {0x1FC6, 0x1FCC},
    {0x1FD0, 0x1FD3},
    {0x1FD6, 0x1FDB},
    {0x1FE0, 0x1FEC},
    {0x1FF2, 0x1FF4},
    {0x1FF6, 0x1FFC},
    {0x203F, 0x2040},
    {0x207F, 0x207F},
    {0x20D0, 0x20DC},
    {0x20E1, 0x20E1},
    {0x2102, 0x2102},
    {0x2107, 0x2107},
    {0x210A, 0x2113},
    {0x2115, 0x2115},
    {0x2119, 0x211D},
    {0x2124, 0x2124},
    {0x2126, 0x2126},
    {0x2128, 0x2128},
    {0x212A, 0x212D},
    {0x212F, 0x2131},
    {0x2133, 0x2139},
    {0x2160, 0x2183},
    {0x3005, 0x3007},
    {0x3021, 0x302F},
    {0x3031, 0x3035},
    {0x3038, 0x303A},
    {0x3041, 0x3094},
    {0x3099, 0x309A},
    {0x309D, 0x309E},
    {0x30A1, 0x30FE},
    {0x3105, 0x312C},
    {0x3131, 0x318E},
    {0x31A0, 0x31B7},
    {0x3400, 0x3400},
    {0x4DB5, 0x4DB5},
    {0x4E00, 0x4E00},
    {0x9FA5, 0x9FA5},
    {0xA000, 0xA48C},
    {0xAC00, 0xAC00},
    {0xD7A3, 0xD7A3},
    {0xF900, 0xFA2D},
    {0xFB00, 0xFB06},
    {0xFB13, 0xFB17},
    {0xFB1D, 0xFB28},
    {0xFB2A, 0xFB36},
    {0xFB38, 0xFB3C},
    {0xFB3E, 0xFB3E},
    {0xFB40, 0xFB41},
    {0xFB43, 0xFB44},
    {0xFB46, 0xFBB1},
    {0xFBD3, 0xFD3D},
    {0xFD50, 0xFD8F},
    {0xFD92, 0xFDC7},
    {0xFDF0, 0xFDFB},
    {0xFE20, 0xFE23},
    {0xFE33, 0xFE34},
    {0xFE4D, 0xFE4F},
    {0xFE70, 0xFE72},
    {0xFE74, 0xFE74},
    {0xFE76, 0xFEFC},
    {0xFF10, 0xFF19},
    {0xFF21, 0xFF3A},
    {0xFF3F, 0xFF3F},
    {0xFF41, 0xFF5A},
    {0xFF65, 0xFFBE},
    {0xFFC2, 0xFFC7},
    {0xFFCA, 0xFFCF},
    {0xFFD2, 0xFFD7},
    {0xFFDA, 0xFFDC},
    {0x0, 0x0}
};

bool is_identifier_start(uint32_t c){
    for (int i = 0; identifier_start_ranges[i].start != 0x0; i++){
        if (c >= identifier_start_ranges[i].start && c <= identifier_start_ranges[i].end) return true;
    }

    return false;
}

bool is_identifier_char(uint32_t c){
    for (int i = 0; i < identifier_continue_ranges[i].start != 0x0; i++){
        if (c >= identifier_continue_ranges[i].start && c <= identifier_continue_ranges[i].end) return true;
    }

    return false;
}

#endif
